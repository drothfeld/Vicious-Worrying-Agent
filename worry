; Vicious Worrying

(defdomain worry
  (
    ; The !eat operator increments the bio-level of the agent's hunger
    ; attribute by a random ranged amount. This also has the chance of
    ; lowering the agent's worry level.
    (:operator (!eat)
      ;preconditions
      (
        (bio-level hunger me ?h)
        (assign ?rnd (call randomEat (?h)))
        (assign ?rndW (call randomEat (?w)))
      )
      ;deleted
      (
        (bio-level hunger me ?h)
      )
      ;added
      (
        (bio-level hunger me (call + ?h ?rnd))
        (bio-level worry me (call - ?w ?rndW))
      )
    )

    ; The !use-bathroom operator increments the bio-level of the agent's bladder
    ; attribute by a random ranged amount. This also has the chance of
    ; slightly lowering the agent's worry level.
    (:operator (!use-bathroom)
      ;preconditions
      (
        (bio-level worry me ?w)
        (bio-level hunger me ?h)
        (assign ?rnd (call randomWorry (?w)))
        (assign ?rndH (call randomEat (?h)))
      )
      ;deleted
      (
        (bio-level bladder me ?b)
        (bio-level worry me ?w)
        (bio-level hunger me ?h)
      )
      ;added
      (
        (bio-level bladder me 100)
        (bio-level worry me (call - ?w ?rnd))
        (bio-level hunger me (call - ?h ?rndH))
      )
    )

    ; The !sleep operator increments the bio-level of the agent's energy
    ; attribute by a random ranged amount. This also has the chance of
    ; greatly lowering/zeroing the agent's worry level.
    (:operator (!sleep)
      ;preconditions
      (
        (bio-level energy me ?e)
        (bio-level worry me ?w)
      )
      ;deleted
      (
        (bio-level energy me ?e)
        (bio-level worry me ?w)
      )
      ;added
      (
        (bio-level energy me 100)
        (bio-level worry me 100)
      )
    )

    ; The !end-worry operator pulls the agent out of its misery and
    ; ends the program.
    (:operator (!end-worry)
      ;preconditions
      (
        (bio-level worry me 0)
      )
      ;deleted
      ()
      ;added
      ()
    )

    ; The !worry operator continues the vicious cycle of worrying. This lowers
    ; the other bio-levels of the agent.
    (:operator (!worry)
      ;preconditions
      (
        (bio-level worry me ?w)
        (bio-level hunger me ?h)
        (bio-level energy me ?e)
        (bio-level bladder me ?b)
        (assign ?rndWorry (call randomWorry (?w)))
        (assign ?rndHunger (call randomWorry (?h)))
        (assign ?rndEnergy (call randomWorry (?e)))
        (assign ?rndBladder (call randomWorry (?b)))
      )
      ;deleted
      (
        (bio-level worry me ?w)
        (bio-level hunger me ?h)
        (bio-level energy me ?e)
        (bio-level bladder me ?b)
      )
      ;added
      (
        (bio-level worry me (call + ?w ?rndWorry))
        (bio-level hunger me (call - ?h ?rndHunger))
        (bio-level energy me (call - ?h ?rndEnergy))
        (bio-level bladder me (call - ?h ?rndBladder))
      )
    )

    ; The goal method that is called from problem. The agent will be successful
    ; when it stops its vicious worrying.
    (:method (stop-worrying me)
      ;preconditions for branch-1
      (
        (bio-level worry me 0)
      )
      ;steps for branch-1
      (
        (!end-worry)
      )

      ;preconditions for branch-2
      ()
      ;steps for branch-2
      (
        (begin-worrying)
      )
    )

    ; Called from the starting method. This method contains
    ; the core logic of the worry cycle.

    (:method (begin-worrying)
      ;preconditions for branch-1
      ()
      ;steps for branch-1
      (
        (!worry)
        (check-bio-levels)
        (begin-worrying)
      )
    )

    ; This method checks the agent's bio levels, and addresses its needs in a
    ; logical fashion. The agent will always use the bathroom first if its
    ; bladder is full. If its bladder is alright but the agent is hungry, it
    ; will then eat. If the agent is completely out of energy, is well fed, and
    ; doesn't need to go to the bathroom, then it will go to bed.
    (:method (check-bio-levels)
      ;preconditions for branch-1
      (
        (bio-level bladder me ?b)
        ;(call <= ?b 15)
      )
      ;steps for branch-1
      (
        (!use-bathroom)
      )

      ;preconditions for branch-2
      (
        (bio-level hunger me ?h)
        ;(call <= ?h 25)
      )
      ;steps for branch-2
      (
        (!eat)
      )

      ;preconditions for branch-3
      (
        (bio-level energy me ?e)
        ;(call <= ?e 5)
      )
      ;steps for branch-3
      (
        (!sleep)
      )

      ;preconditions for branch-4
      ()
      ;steps for branch-4
      (
        (!worry)
      )


    )



  )
)
